name: Azure Pipelines
trigger:
  - master
pool: MyPool
variables:
  python.version: 3.7.6
  azureServiceConnectionId: myServiceConnection
  projectRoot: $(System.DefaultWorkingDirectory)
stages:
  - stage: Build
    jobs:
      - job: BuildInfrastructure
        steps:
          - task: >-
              ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
            displayName: Terrafom installation
            inputs:
              terraformVersion: 1.2.9
          - task: >-
              ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
            displayName: Terrafom init
            inputs:
              provider: azurerm
              command: init
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environments/test
              backendServiceArm: $(azureServiceConnectionId)
              backendAzureRmResourceGroupName: Azuredevops
              backendAzureRmStorageAccountName: tfstate982423078
              backendAzureRmContainerName: tfstate
              backendAzureRmKey: test.terraform.tfstate
          - task: >-
              ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
            displayName: Terraform validate
            inputs:
              provider: azurerm
              command: validate
          - task: >-
              ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
            displayName: Terraform apply
            inputs:
              provider: azurerm
              command: apply
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environments/test
              environmentServiceNameAzureRM: $(azureServiceConnectionId)
          - task: NodeTool@0
            displayName: Install NodeJS
            inputs:
              versionSpec: 16.x
          - task: CmdLine@2
            displayName: Install NPM
            inputs:
              script: sudo apt install npm -y
              workingDirectory: $(System.DefaultWorkingDirectory)
          - task: CmdLine@2
            displayName: Install Newman
            inputs:
              script: sudo npm install -g newman
              workingDirectory: $(System.DefaultWorkingDirectory)
          - task: CmdLine@2
            displayName: Run Data Validation Tests
            continueOnError: true
            inputs:
              workingDirectory: $(System.DefaultWorkingDirectory)/automatedtesting/postman
              script: >
                newman run DataValidationTestSuite.json -e environment.json
                --reporters cli,junit --reporter-junit-export
                data-validation-test-report.xml
          - task: CmdLine@2
            displayName: Run Regression Tests
            continueOnError: true
            inputs:
              script: >
                newman run RegressionTestSuite.json -e environment.json
                --reporters cli,junit --reporter-junit-export
                regresstion-test-report.xml
              workingDirectory: $(System.DefaultWorkingDirectory)/automatedtesting/postman
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: JUnit
              testResultsFiles: '**/*report.xml'
              searchFolder: $(System.DefaultWorkingDirectory)/automatedtesting/postman
              mergeTestResults: true
              testRunTitle: Run Test Report
